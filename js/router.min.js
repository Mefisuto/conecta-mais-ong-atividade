export function initRouter({onAfterNavigate,dynamicRoutes={}}={}){const SPA_LINK_SELECTOR='[data-spa-link]';const APP_SELECTOR='#app[data-spa-root]';const dyn=dynamicRoutes;async function navigateTo(url,{replace=false}={}){const path=normalizePath(url);if(dyn[path]){const html=await dyn[path]();swapApp(html);updateHistory(path,replace);onAfterNavigate?.(path);return;}const fragmentHTML=await fetchAppFragment(path);if(fragmentHTML){swapApp(fragmentHTML);updateHistory(path,replace);onAfterNavigate?.(path);}else{window.location.href=path;}}function normalizePath(href){try{const u=new URL(href,window.location.origin);const p=u.pathname.replace(/\/+$/,'');return p==='' || p==='/' ? '/index.html':p;}catch{return href || '/index.html';}}function updateHistory(path,replace){const current=window.location.pathname || '/index.html';if(replace || current===path)history.replaceState({path},'',path);else history.pushState({path},'',path);window.scrollTo({top:0,behavior:'instant'});}async function fetchAppFragment(path){const res=await fetch(path,{credentials:'same-origin'});if(!res.ok)return null;const text=await res.text();const parser=new DOMParser();const doc=parser.parseFromString(text,'text/html');const app=doc.querySelector(APP_SELECTOR);return app ? app.innerHTML:null;}function swapApp(inner){const app=document.querySelector(APP_SELECTOR);if(app)app.innerHTML=inner;}document.addEventListener('click',(e)=>{const a=e.target.closest(SPA_LINK_SELECTOR);if(!a)return;const url=a.getAttribute('href');const isExternal=a.host && a.host !==window.location.host;if(!url || isExternal || a.target==='_blank')return;e.preventDefault();navigateTo(url);});window.addEventListener('popstate',(e)=>{const path=(e.state && e.state.path)|| window.location.pathname || '/index.html';navigateTo(path,{replace:true});});const initialPath=window.location.pathname || '/index.html';history.replaceState({path:initialPath},'',initialPath);onAfterNavigate?.(initialPath);return{navigateTo};}